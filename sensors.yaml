################
## MQQT_Sensor
################
- platform: mqtt
  state_topic: 'RTL_433/JSON'
  name: 'Office P1 Temperature'
  unit_of_measurement: "°C"
  value_template: "{% if value_json.model == 'Prologue sensor' and value_json.channel == 1 %}{{ value_json.temperature_C | round(1) }}{% else %}{{ states.sensor.office_p1_temperature.state }}{% endif %}"

- platform: mqtt
  state_topic: 'RTL_433/JSON'
  name: 'Office P1 Humidity'
  unit_of_measurement: "%"
  value_template: "{% if value_json.model == 'Prologue sensor' and value_json.channel == 1 %}{{ value_json.humidity | round(1) }}{% else %}{{ states.sensor.office_p1_humidity.state }}{% endif %}"

- platform: mqtt
  state_topic: 'RTL_433/JSON'
  name: 'Office P1 Battery'
  value_template: "{% if value_json.model == 'Prologue sensor' and value_json.channel == 1 %}{{ value_json.battery }}{% else %}{{ states.sensor.office_p1_battery.state }}{% endif %}"

- platform: mqtt
  state_topic: 'RTL_433/JSON'
  name: 'Office P2 Temperature'
  unit_of_measurement: "°C"
  value_template: "{% if value_json.model == 'Prologue sensor' and value_json.channel == 2 %}{{ value_json.temperature_C | round(1) }}{% else %}{{ states.sensor.office_p2_temperature.state }}{% endif %}"

- platform: mqtt
  state_topic: 'RTL_433/JSON'
  name: 'Office P2 Humidity'
  unit_of_measurement: "%"
  value_template: "{% if value_json.model == 'Prologue sensor' and value_json.channel == 2 %}{{ value_json.humidity | round(1) }}{% else %}{{ states.sensor.office_p2_humidity.state }}{% endif %}"

- platform: mqtt
  state_topic: 'RTL_433/JSON'
  name: 'Office P2 Battery'
  value_template: "{% if value_json.model == 'Prologue sensor' and value_json.channel == 2 %}{{ value_json.battery }}{% else %}{{ states.sensor.office_p2_battery.state }}{% endif %}"

- platform: mqtt
  state_topic: 'RTL_433/JSON'
  name: 'Office P3 Temperature'
  unit_of_measurement: "°C"
  value_template: "{% if value_json.model == 'Prologue sensor' and value_json.channel == 3 %}{{ value_json.temperature_C | round(1) }}{% else %}{{ states.sensor.office_p3_temperature.state }}{% endif %}"

- platform: mqtt
  state_topic: 'RTL_433/JSON'
  name: 'Office P3 Humidity'
  unit_of_measurement: "%"
  value_template: "{% if value_json.model == 'Prologue sensor' and value_json.channel == 3 %}{{ value_json.humidity | round(1) }}{% else %}{{ states.sensor.office_p3_humidity.state }}{% endif %}"

- platform: mqtt
  state_topic: 'RTL_433/JSON'
  name: 'Office P3 Battery'
  value_template: "{% if value_json.model == 'Prologue sensor' and value_json.channel == 3 %}{{ value_json.battery }}{% else %}{{ states.sensor.office_p3_battery.state }}{% endif %}"

################
## WeatherSensor 
################
- platform: yr
  name: Weather
  forecast: 24
  monitored_conditions:
  - temperature
  - precipitation
  - windSpeed
  - pressure
  - humidity
  - dewpointTemperature

################
## SystemStatus 
################
- platform: systemmonitor
  resources:
  - type: disk_use_percent
    arg: /
  - type: last_boot
  - type: processor_use

###############
##Date and Time
###############
- platform: time_date
  display_options:
  - 'date'
  - 'date_time'
  - 'time'
  - 'time_date'
  - 'time_utc'

- platform: worldclock
  name: Time in Odessa
  time_zone: Europe/Kiev

##########################
## MultiSensors Batteries
##########################
- platform: template
  sensors:
    multisensor1_battery:
      friendly_name: "Multisensor1_Battery"
      value_template: "{% if states.zwave.multisensor1 %}
        {{ states.zwave.multisensor1.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%'
      # entity_id: zwave.multisensor1
      icon_template: >-
        {% set battery_level = states('sensor.multisensor1_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %}

    multisensor2_battery:
      friendly_name: "Multisensor2_Battery"
      value_template: "{% if states.zwave.multisensor2 %}
        {{ states.zwave.multisensor2.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%'
      # entity_id: zwave.multisensor2
      icon_template: >-
        {% set battery_level = states('sensor.multisensor2_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %} 

#######################
## FloodSensor1 Battery
#######################
    floodsensor1_battery:
      friendly_name: "FloodSensor1_Battery"
      value_template: "{% if states.zwave.everspring_st812_flood_detector %}
        {{ states.zwave.everspring_st812_flood_detector.attributes.battery_level }}
        {% else %}
        unknown
        {% endif %}"
      unit_of_measurement: '%'
      # entity_id: zwave.everspring_st812_flood_detector
      icon_template: >-
        {% set battery_level = states('sensor.floodsensor1_battery')|int('unknown') %}
        {% set battery_round = (battery_level|int / 10)|int * 10 %}
        {% if battery_level == 'unknown' %}
        mdi:battery-unknown
        {% else %}
        {% if battery_round >= 100 %}
        mdi:battery
        {% elif battery_round > 0 %}
        mdi:battery-{{ battery_round }}
        {% else %}
        mdi:battery-alert
        {% endif %}
        {% endif %}
